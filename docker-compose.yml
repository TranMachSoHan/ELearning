version: '3.3'
services:
  mongodb:
      image: mongo:latest
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: password
        MONGO_INITDB_DATABASE: user_eLearning
      ports:
        - "27017:27017"
      container_name: mongodb
      networks:
        - kong-net
      volumes:
        - ./database-data:/data/db
  backend_user:
    image: public.ecr.aws/l4i7m7o8/rmit_e_learning_user_backend:latest
    container_name: backend_user
    networks:
      - kong-net
    ports:
      - "8081:8081"

  backend_course:  
    image: public.ecr.aws/l4i7m7o8/rmit_e_learning_course_backend:latest
    # image: rmit_e_learning_course_backend:latest
    container_name: backend_course
    networks:
      - kong-net
    depends_on:
      - mongodb
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=user_eLearning
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.3
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

networks:
  kong-net:
    driver: bridge

volumes:
  mongodb_data_container:

  # mongodb_course:
  #     image: mongo:latest
  #     environment:
  #       MONGO_INITDB_ROOT_USERNAME: root
  #       MONGO_INITDB_ROOT_PASSWORD: password
  #       MONGO_INITDB_DATABASE: course_eLearning
  #     ports:
  #       - "27018:27018"
  #     container_name: mongodb_course
  #     networks:
  #       - kong-net
  #     volumes:
  #       - ./my-database:/data/db

  # 
  
  # kong:
  #   image: kong:2.2.0
  #   environment:
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: '0.0.0.0:8001'
  #     KONG_DATABASE: "off"
  #     KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #   volumes:
  #     - ./kong/:/usr/local/kong/declarative
  #   networks:
  #     - kong-net
  #   ports:
  #     - "8000:8000/tcp"
  #     - "127.0.0.1:8001:8001/tcp"
  #     - "8443:8443/tcp"
  #     - "127.0.0.1:8444:8444/tcp"
  #   healthcheck:
  #     test: ["CMD", "kong", "health"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  #   restart: on-failure
  #   deploy:
  #     restart_policy:
  #       condition: on-failure


